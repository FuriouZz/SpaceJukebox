var HELPERS;

HELPERS = HELPERS || {
  merge: function(options, overrides) {
    return this.extend(this.extend({}, options), overrides);
  },
  extend: function(object, properties) {
    var key, val;
    for (key in properties) {
      val = properties[key];
      object[key] = val;
    }
    return object;
  },
  angleBetweenPoints: function(first, second) {
    var height, width;
    height = second.y - first.y;
    width = second.x - first.x;
    return Math.atan2(height, width);
  },
  distance: function(point1, point2) {
    var d, x, y;
    x = point1.x - point2.x;
    y = point1.y - point2.y;
    d = x * x + y * y;
    return Math.sqrt(d);
  },
  collision: function(dot1, dot2) {
    var dist, r1, r2;
    r1 = dot1.radius ? dot1.radius : 0;
    r2 = dot2.radius ? dot2.radius : 0;
    dist = r1 + r2;
    return this.distance(dot1.position, dot2.position) <= Math.sqrt(dist * dist);
  },
  map: function(value, low1, high1, low2, high2) {
    return low2 + (high2 - low2) * (value - low1) / (high1 - low1);
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHBlcnMuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLElBQUEsT0FBQTs7QUFBQSxPQUFBLEdBQVUsT0FBQSxJQUFXO0FBQUEsRUFHbkIsS0FBQSxFQUFPLFNBQUMsT0FBRCxFQUFVLFNBQVYsR0FBQTtXQUNMLElBQUMsQ0FBQSxNQUFELENBQVMsSUFBQyxDQUFBLE1BQUQsQ0FBUSxFQUFSLEVBQVksT0FBWixDQUFULEVBQStCLFNBQS9CLEVBREs7RUFBQSxDQUhZO0FBQUEsRUFNbkIsTUFBQSxFQUFRLFNBQUMsTUFBRCxFQUFTLFVBQVQsR0FBQTtBQUNOLFFBQUEsUUFBQTtBQUFBLFNBQUEsaUJBQUE7NEJBQUE7QUFDRSxNQUFBLE1BQU8sQ0FBQSxHQUFBLENBQVAsR0FBYyxHQUFkLENBREY7QUFBQSxLQUFBO1dBRUEsT0FITTtFQUFBLENBTlc7QUFBQSxFQVluQixrQkFBQSxFQUFvQixTQUFDLEtBQUQsRUFBUSxNQUFSLEdBQUE7QUFDbEIsUUFBQSxhQUFBO0FBQUEsSUFBQSxNQUFBLEdBQVMsTUFBTSxDQUFDLENBQVAsR0FBVyxLQUFLLENBQUMsQ0FBMUIsQ0FBQTtBQUFBLElBQ0EsS0FBQSxHQUFTLE1BQU0sQ0FBQyxDQUFQLEdBQVcsS0FBSyxDQUFDLENBRDFCLENBQUE7QUFHQSxXQUFPLElBQUksQ0FBQyxLQUFMLENBQVcsTUFBWCxFQUFtQixLQUFuQixDQUFQLENBSmtCO0VBQUEsQ0FaRDtBQUFBLEVBa0JuQixRQUFBLEVBQVUsU0FBQyxNQUFELEVBQVMsTUFBVCxHQUFBO0FBQ1IsUUFBQSxPQUFBO0FBQUEsSUFBQSxDQUFBLEdBQUksTUFBTSxDQUFDLENBQVAsR0FBVyxNQUFNLENBQUMsQ0FBdEIsQ0FBQTtBQUFBLElBQ0EsQ0FBQSxHQUFJLE1BQU0sQ0FBQyxDQUFQLEdBQVcsTUFBTSxDQUFDLENBRHRCLENBQUE7QUFBQSxJQUVBLENBQUEsR0FBSSxDQUFBLEdBQUksQ0FBSixHQUFRLENBQUEsR0FBSSxDQUZoQixDQUFBO0FBR0EsV0FBTyxJQUFJLENBQUMsSUFBTCxDQUFVLENBQVYsQ0FBUCxDQUpRO0VBQUEsQ0FsQlM7QUFBQSxFQXdCbkIsU0FBQSxFQUFXLFNBQUMsSUFBRCxFQUFPLElBQVAsR0FBQTtBQUNULFFBQUEsWUFBQTtBQUFBLElBQUEsRUFBQSxHQUFRLElBQUksQ0FBQyxNQUFSLEdBQW9CLElBQUksQ0FBQyxNQUF6QixHQUFxQyxDQUExQyxDQUFBO0FBQUEsSUFDQSxFQUFBLEdBQVEsSUFBSSxDQUFDLE1BQVIsR0FBb0IsSUFBSSxDQUFDLE1BQXpCLEdBQXFDLENBRDFDLENBQUE7QUFBQSxJQUVBLElBQUEsR0FBTyxFQUFBLEdBQUssRUFGWixDQUFBO0FBSUEsV0FBTyxJQUFDLENBQUEsUUFBRCxDQUFVLElBQUksQ0FBQyxRQUFmLEVBQXlCLElBQUksQ0FBQyxRQUE5QixDQUFBLElBQTJDLElBQUksQ0FBQyxJQUFMLENBQVUsSUFBQSxHQUFPLElBQWpCLENBQWxELENBTFM7RUFBQSxDQXhCUTtBQUFBLEVBK0JuQixHQUFBLEVBQUssU0FBQyxLQUFELEVBQVEsSUFBUixFQUFjLEtBQWQsRUFBcUIsSUFBckIsRUFBMkIsS0FBM0IsR0FBQTtBQUNILFdBQU8sSUFBQSxHQUFPLENBQUMsS0FBQSxHQUFRLElBQVQsQ0FBQSxHQUFpQixDQUFDLEtBQUEsR0FBUSxJQUFULENBQWpCLEdBQWtDLENBQUMsS0FBQSxHQUFRLElBQVQsQ0FBaEQsQ0FERztFQUFBLENBL0JjO0NBQXJCLENBQUEiLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIvc291cmNlLyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG5IRUxQRVJTID0gSEVMUEVSUyB8fCB7XG5cbiAgIyBPYmplY3RcbiAgbWVyZ2U6IChvcHRpb25zLCBvdmVycmlkZXMpIC0+XG4gICAgQGV4dGVuZCAoQGV4dGVuZCB7fSwgb3B0aW9ucyksIG92ZXJyaWRlc1xuXG4gIGV4dGVuZDogKG9iamVjdCwgcHJvcGVydGllcykgLT5cbiAgICBmb3Iga2V5LCB2YWwgb2YgcHJvcGVydGllc1xuICAgICAgb2JqZWN0W2tleV0gPSB2YWxcbiAgICBvYmplY3RcblxuICAjIE1hdGhcbiAgYW5nbGVCZXR3ZWVuUG9pbnRzOiAoZmlyc3QsIHNlY29uZCkgLT5cbiAgICBoZWlnaHQgPSBzZWNvbmQueSAtIGZpcnN0LnlcbiAgICB3aWR0aCAgPSBzZWNvbmQueCAtIGZpcnN0LnhcbiAgICAjIGNvbnNvbGUubG9nKCdVdGlscycsIE1hdGguYXRhbjIoaGVpZ2h0LCB3aWR0aCkpXG4gICAgcmV0dXJuIE1hdGguYXRhbjIoaGVpZ2h0LCB3aWR0aClcblxuICBkaXN0YW5jZTogKHBvaW50MSwgcG9pbnQyKSAtPlxuICAgIHggPSBwb2ludDEueCAtIHBvaW50Mi54XG4gICAgeSA9IHBvaW50MS55IC0gcG9pbnQyLnlcbiAgICBkID0geCAqIHggKyB5ICogeVxuICAgIHJldHVybiBNYXRoLnNxcnQoZClcblxuICBjb2xsaXNpb246IChkb3QxLCBkb3QyKS0+XG4gICAgcjEgPSBpZiBkb3QxLnJhZGl1cyB0aGVuIGRvdDEucmFkaXVzIGVsc2UgMFxuICAgIHIyID0gaWYgZG90Mi5yYWRpdXMgdGhlbiBkb3QyLnJhZGl1cyBlbHNlIDBcbiAgICBkaXN0ID0gcjEgKyByMlxuXG4gICAgcmV0dXJuIEBkaXN0YW5jZShkb3QxLnBvc2l0aW9uLCBkb3QyLnBvc2l0aW9uKSA8PSBNYXRoLnNxcnQoZGlzdCAqIGRpc3QpXG5cbiAgbWFwOiAodmFsdWUsIGxvdzEsIGhpZ2gxLCBsb3cyLCBoaWdoMikgLT5cbiAgICByZXR1cm4gbG93MiArIChoaWdoMiAtIGxvdzIpICogKHZhbHVlIC0gbG93MSkgLyAoaGlnaDEgLSBsb3cxKVxufVxuIl19