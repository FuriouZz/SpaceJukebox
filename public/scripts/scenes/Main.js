var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

SPACE.MainScene = (function(_super) {
  __extends(MainScene, _super);

  MainScene.prototype.playlist = null;

  MainScene.prototype.current = null;

  MainScene.prototype.totalDuration = 0;

  function MainScene(bg) {
    this._whileplaying = __bind(this._whileplaying, this);
    this._onfinish = __bind(this._onfinish, this);
    this._onplay = __bind(this._onplay, this);
    this._starting = __bind(this._starting, this);
    var middlePoint;
    MainScene.__super__.constructor.call(this, bg);
    middlePoint = new PIXI.Point(window.innerWidth, window.innerHeight);
    this.eq = new SPACE.Equalizer(middlePoint, {
      minLength: 0,
      maxLength: 200
    });
    this.addChild(this.eq);
    this.sc = new SPACE.SoundCloud(SPACE.SOUNDCLOUD.id);
    this.playlist = [];
    this.add('https://soundcloud.com/chonch-2/courte-danse-macabre');
    setTimeout((function(_this) {
      return function() {
        return _this.add('https://soundcloud.com/chonch-2/mouais');
      };
    })(this), 1000);
    setTimeout((function(_this) {
      return function() {
        return _this.add('https://soundcloud.com/chonch-2/cacaco-2');
      };
    })(this), 2000);
    setTimeout((function(_this) {
      return function() {
        return _this.add('https://soundcloud.com/chonch-2/duodenum');
      };
    })(this), 3000);
    this.add('https://soundcloud.com/chonch-2/little-green-monkey');
  }

  MainScene.prototype.draw = function() {
    return this.eq.draw();
  };

  MainScene.prototype.update = function(delta) {
    var i, track, _i, _len, _ref;
    this.eq.update(delta);
    _ref = this.playlist;
    for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
      track = _ref[i];
      track.update(delta);
    }
    if (this.playlist.length > 0) {
      if (this.current === null) {
        return this.next();
      }
    }
  };

  MainScene.prototype.add = function(soundOrPlaylist) {
    var middlePoint;
    middlePoint = new PIXI.Point(window.innerWidth, window.innerHeight);
    return this.sc.getSoundOrPlaylist(soundOrPlaylist, (function(_this) {
      return function(o) {
        var data, spaceship, track, tracks, _i, _len, _results;
        tracks = null;
        if (o.hasOwnProperty('tracks')) {
          tracks = o.tracks;
        } else {
          tracks = [];
          tracks.push(o);
        }
        _results = [];
        for (_i = 0, _len = tracks.length; _i < _len; _i++) {
          data = tracks[_i];
          spaceship = new SPACE.Spaceship(middlePoint, _this.eq.radius);
          _this.addChild(spaceship);
          track = new SPACE.Track(data, spaceship);
          track.durationBeforeLaunching = _this.getDurationFromPosition(_this.playlist.length - 1);
          _this.playlist.push(track);
          _results.push(_this.totalDuration += data.duration);
        }
        return _results;
      };
    })(this));
  };

  MainScene.prototype.getDurationFromPosition = function(position) {
    var duration, i, track, _i, _len, _ref;
    duration = 0;
    _ref = this.playlist;
    for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
      track = _ref[i];
      duration += track.data.duration;
      if (i === position) {
        break;
      }
    }
    return duration;
  };

  MainScene.prototype.next = function(track) {
    if (this.current) {
      this._onfinish();
    }
    this.current = this.playlist.shift();
    return this.sc.streamSound(this.current.data, this._starting, {
      onplay: this._onplay,
      onfinish: this._onfinish,
      onstop: this._onstop,
      whileplaying: this._whileplaying
    });
  };

  MainScene.prototype.play = function() {
    if (this.current && this.current.hasOwnProperty('sound')) {
      return this.current.sound.play();
    }
  };

  MainScene.prototype.resume = function() {
    if (this.current && this.current.hasOwnProperty('sound')) {
      return this.current.sound.resume();
    }
  };

  MainScene.prototype.pause = function() {
    if (this.current && this.current.hasOwnProperty('sound')) {
      this.current.sound.pause();
      return this.eq.mute();
    }
  };

  MainScene.prototype.stop = function() {
    if (this.current && this.current.hasOwnProperty('sound')) {
      this.current.sound.stop();
      return this.eq.mute();
    }
  };

  MainScene.prototype._starting = function(sound) {
    this.current.sound = sound;
    return document.dispatchEvent(SPACE.Track.ON_PLAY());
  };

  MainScene.prototype._onplay = function() {
    return console.log('onplay');
  };

  MainScene.prototype._onfinish = function() {
    this.current.sound.stop();
    this.current = null;
    this.eq.mute();
    this.tmpPosition = 0;
    return document.dispatchEvent(SPACE.Track.ON_STOP());
  };

  MainScene.prototype.tmpPosition = 0;

  MainScene.prototype._whileplaying = function() {
    var datas, i, _i;
    datas = Array(256);
    for (i = _i = 0; _i <= 127; i = ++_i) {
      datas[i] = Math.max(this.current.sound.waveformData.left[i], this.current.sound.waveformData.right[i]);
      datas[255 - i] = Math.max(this.current.sound.waveformData.left[i], this.current.sound.waveformData.right[i]);
    }
    if (this.current.sound.paused) {
      return this.eq.mute();
    } else {
      return this.eq.setNewValues(datas);
    }
  };

  return MainScene;

})(SPACE.Scene);

//# sourceMappingURL=data:application/json;base64,