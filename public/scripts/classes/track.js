var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

SPACE.Track = (function() {
  Track.prototype.data = null;

  Track.prototype.spaceship = null;

  Track.prototype.sound = null;

  Track.prototype.time = 0;

  Track.prototype.pendingDuration = 0;

  Track.prototype.JukeBoxisPlaying = false;

  function Track(data) {
    this._eJukeboxIsStopped = __bind(this._eJukeboxIsStopped, this);
    this._eJukeboxIsPlaying = __bind(this._eJukeboxIsPlaying, this);
    this.data = data;
    this._events();
  }

  Track.prototype._events = function() {
    document.addEventListener(JUKEBOX.IS_PLAYING.type, this._eJukeboxIsPlaying);
    return document.addEventListener(JUKEBOX.IS_STOPPED.type, this._eJukeboxIsStopped);
  };

  Track.prototype._eJukeboxIsPlaying = function() {
    return this.JukeBoxisPlaying = true;
  };

  Track.prototype._eJukeboxIsStopped = function() {
    this.JukeBoxisPlaying = false;
    return console.log('i said stop');
  };

  Track.prototype.update = function(delta) {
    if (this.JukeBoxisPlaying) {
      this.time += delta;
    }
    if (this.pendingDuration > 0 && (this.pendingDuration - this.time) < 30 * 60 * 1000 && this.spaceship.state === SPACESHIP.IDLE && this.JukeBoxisPlaying) {
      console.log('Spaceship launched: ' + this.data.title, this.time, this.pendingDuration, this.pendingDuration - this.time, 5 * 60 * 1000);
      this.spaceship.setState(SPACESHIP.LAUNCHED);
      this.spaceship.duration = this.spaceship.time = this.pendingDuration - this.time;
    }
    if (this.spaceship.state === SPACESHIP.LAUNCHED) {
      this.spaceship.duration = this.spaceship.time = this.pendingDuration - this.time;
    }
    if (this.spaceship.state === SPACESHIP.IN_LOOP) {
      this.spaceship.time = this.pendingDuration - this.time;
    }
    return this.spaceship.update(delta);
  };

  return Track;

})();

//# sourceMappingURL=data:application/json;base64,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QyxLQUFYLEtBQW9CLFNBQVMsQ0FBQyxPQUFqQztBQUNFLE1BQUEsSUFBQyxDQUFBLFNBQVMsQ0FBQyxJQUFYLEdBQW1CLElBQUMsQ0FBQSxlQUFELEdBQW1CLElBQUMsQ0FBQSxJQUF2QyxDQURGO0tBbkJBO1dBOEJBLElBQUMsQ0FBQSxTQUFTLENBQUMsTUFBWCxDQUFrQixLQUFsQixFQS9CTTtFQUFBLENBMUJSLENBQUE7O2VBQUE7O0lBRkYsQ0FBQSIsImZpbGUiOiJjbGFzc2VzL3RyYWNrLmpzIiwic291cmNlUm9vdCI6Ii9zb3VyY2UvIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgU1BBQ0UuVHJhY2tcblxuICBkYXRhOiAgICAgIG51bGxcbiAgc3BhY2VzaGlwOiBudWxsXG5cbiAgc291bmQ6ICAgICBudWxsXG5cbiAgdGltZTogICAgICAwXG5cbiAgcGVuZGluZ0R1cmF0aW9uOiAwXG5cbiAgSnVrZUJveGlzUGxheWluZzogZmFsc2VcblxuICBjb25zdHJ1Y3RvcjogKGRhdGEpLT5cbiAgICBAZGF0YSA9IGRhdGFcbiAgICBAX2V2ZW50cygpXG5cbiAgX2V2ZW50czogLT5cbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKEpVS0VCT1guSVNfUExBWUlORy50eXBlLCBAX2VKdWtlYm94SXNQbGF5aW5nKVxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoSlVLRUJPWC5JU19TVE9QUEVELnR5cGUsIEBfZUp1a2Vib3hJc1N0b3BwZWQpXG5cbiAgX2VKdWtlYm94SXNQbGF5aW5nOiA9PlxuICAgIEBKdWtlQm94aXNQbGF5aW5nID0gdHJ1ZVxuXG4gIF9lSnVrZWJveElzU3RvcHBlZDogPT5cbiAgICBASnVrZUJveGlzUGxheWluZyA9IGZhbHNlXG4gICAgY29uc29sZS5sb2cgJ2kgc2FpZCBzdG9wJ1xuXG4gIHVwZGF0ZTogKGRlbHRhKS0+XG4gICAgaWYgQEp1a2VCb3hpc1BsYXlpbmdcbiAgICAgIEB0aW1lICs9IGRlbHRhXG5cbiAgICBpZiBAcGVuZGluZ0R1cmF0aW9uID4gMCBhbmQgKEBwZW5kaW5nRHVyYXRpb24gLSBAdGltZSkgPCAzMCo2MCoxMDAwIGFuZCBAc3BhY2VzaGlwLnN0YXRlID09IFNQQUNFU0hJUC5JRExFIGFuZCBASnVrZUJveGlzUGxheWluZ1xuICAgICAgY29uc29sZS5sb2cgJ1NwYWNlc2hpcCBsYXVuY2hlZDogJytAZGF0YS50aXRsZSwgQHRpbWUsIEBwZW5kaW5nRHVyYXRpb24sIChAcGVuZGluZ0R1cmF0aW9uIC0gQHRpbWUpLCA1KjYwKjEwMDBcbiAgICAgIEBzcGFjZXNoaXAuc2V0U3RhdGUoU1BBQ0VTSElQLkxBVU5DSEVEKVxuICAgICAgQHNwYWNlc2hpcC5kdXJhdGlvbiA9IEBzcGFjZXNoaXAudGltZSA9IChAcGVuZGluZ0R1cmF0aW9uIC0gQHRpbWUpXG5cbiAgICAgICMgaWYgQGRhdGEudGl0bGUgPT0gJ1RvbSBNaXNjaCAtIFJpc2snXG4gICAgICAjICAgY29uc29sZS5sb2cgJ3BlbmRpbmcnLCBAcGVuZGluZ0R1cmF0aW9uXG4gICAgICAjICAgY29uc29sZS5sb2cgJ3RpbWUnLCBAdGltZVxuICAgICAgIyAgIGNvbnNvbGUubG9nICdwZW5kaW5nLXRpbWUnLCAoQHBlbmRpbmdEdXJhdGlvbiAtIEB0aW1lKVxuICAgICAgIyAgIGNvbnNvbGUubG9nICdzdGltZScsIEBzcGFjZXNoaXAudGltZVxuICAgICAgIyAgIGNvbnNvbGUubG9nICdzZHVyYXRpb24nLCBAc3BhY2VzaGlwLmR1cmF0aW9uXG4gICAgICAjICAgZGVidWdnZXJcblxuICAgIGlmIEBzcGFjZXNoaXAuc3RhdGUgPT0gU1BBQ0VTSElQLkxBVU5DSEVEXG4gICAgICBAc3BhY2VzaGlwLmR1cmF0aW9uID0gQHNwYWNlc2hpcC50aW1lID0gKEBwZW5kaW5nRHVyYXRpb24gLSBAdGltZSlcblxuICAgIGlmIEBzcGFjZXNoaXAuc3RhdGUgPT0gU1BBQ0VTSElQLklOX0xPT1BcbiAgICAgIEBzcGFjZXNoaXAudGltZSA9IChAcGVuZGluZ0R1cmF0aW9uIC0gQHRpbWUpXG4gICAgICAjIGlmIEBkYXRhLnRpdGxlID09ICdUb20gTWlzY2ggLSBSaXNrJ1xuICAgICAgIyAgIGNvbnNvbGUubG9nICdwZW5kaW5nJywgQHBlbmRpbmdEdXJhdGlvblxuICAgICAgIyAgIGNvbnNvbGUubG9nICd0aW1lJywgQHRpbWVcbiAgICAgICMgICBjb25zb2xlLmxvZyAncGVuZGluZy10aW1lJywgKEBwZW5kaW5nRHVyYXRpb24gLSBAdGltZSlcbiAgICAgICMgICBjb25zb2xlLmxvZyAnc3RpbWUnLCBAc3BhY2VzaGlwLnRpbWVcbiAgICAgICMgICBjb25zb2xlLmxvZyAnc2R1cmF0aW9uJywgQHNwYWNlc2hpcC5kdXJhdGlvblxuICAgICAgIyAgIGRlYnVnZ2VyXG4gICAgICAjIGNvbnNvbGUubG9nIEBkYXRhLnRpdGxlLCAgQHNwYWNlc2hpcC50aW1lIC8gQHNwYWNlc2hpcC5kdXJhdGlvbiBpZiBAZGF0YS50aXRsZSA9PSAnVG9tIE1pc2NoIC0gUmlzaydcblxuICAgIEBzcGFjZXNoaXAudXBkYXRlKGRlbHRhKVxuIl19