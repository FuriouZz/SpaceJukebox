var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

SPACE.Track = (function() {
  Track.prototype.data = null;

  Track.prototype.spaceship = null;

  Track.prototype.sound = null;

  Track.prototype.time = null;

  Track.prototype.durationBeforeLaunching = null;

  function Track(data, spaceship) {
    this.onstop = __bind(this.onstop, this);
    this.onplay = __bind(this.onplay, this);
    this.data = data;
    this.spaceship = spaceship;
    this._events();
  }

  Track.ON_PLAY = function() {
    var ev;
    ev = document.createEvent('HTMLEvents');
    ev.initEvent('soundonplay', true, true);
    ev.eventName = 'soundonplay';
    return ev;
  };

  Track.ON_STOP = function() {
    var ev;
    ev = document.createEvent('HTMLEvents');
    ev.initEvent('soundonstop', true, true);
    ev.eventName = 'soundonstop';
    return ev;
  };

  Track.prototype._events = function() {
    document.addEventListener('soundonplay', this.onplay);
    return document.addEventListener('soundonstop', this.onstop);
  };

  Track.prototype.onplay = function() {
    return this.isPlaying = true;
  };

  Track.prototype.onstop = function() {
    return this.isPlaying = false;
  };

  Track.prototype.update = function(delta) {
    if (this.isPlaying) {
      this.time += delta;
    }
    if (this.durationBeforeLaunching !== null && (this.durationBeforeLaunching - this.time) < 5 * 60 * 1000 && this.spaceship.state === SPACESHIP.IDLE && this.isPlaying) {
      console.log(this.data.title);
      this.spaceship.setState(SPACESHIP.LAUNCHED);
      this.spaceship.duration = this.durationBeforeLaunching - this.time;
    }
    if (this.spaceship.state === SPACESHIP.IN_LOOP) {
      this.spaceship.time = this.durationBeforeLaunching - this.time;
    }
    return this.spaceship.update(delta);
  };

  return Track;

})();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsYXNzZXMvdHJhY2suY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsa0ZBQUE7O0FBQUEsS0FBVyxDQUFDO0FBRVYsa0JBQUEsSUFBQSxHQUFXLElBQVgsQ0FBQTs7QUFBQSxrQkFDQSxTQUFBLEdBQVcsSUFEWCxDQUFBOztBQUFBLGtCQUVBLEtBQUEsR0FBVyxJQUZYLENBQUE7O0FBQUEsa0JBSUEsSUFBQSxHQUFXLElBSlgsQ0FBQTs7QUFBQSxrQkFNQSx1QkFBQSxHQUF5QixJQU56QixDQUFBOztBQVFhLEVBQUEsZUFBQyxJQUFELEVBQU8sU0FBUCxHQUFBO0FBQ1gsMkNBQUEsQ0FBQTtBQUFBLDJDQUFBLENBQUE7QUFBQSxJQUFBLElBQUMsQ0FBQSxJQUFELEdBQWEsSUFBYixDQUFBO0FBQUEsSUFDQSxJQUFDLENBQUEsU0FBRCxHQUFhLFNBRGIsQ0FBQTtBQUFBLElBRUEsSUFBQyxDQUFBLE9BQUQsQ0FBQSxDQUZBLENBRFc7RUFBQSxDQVJiOztBQUFBLEVBYUEsS0FBQyxDQUFBLE9BQUQsR0FBVSxTQUFBLEdBQUE7QUFDUixRQUFBLEVBQUE7QUFBQSxJQUFBLEVBQUEsR0FBSyxRQUFRLENBQUMsV0FBVCxDQUFxQixZQUFyQixDQUFMLENBQUE7QUFBQSxJQUNBLEVBQUUsQ0FBQyxTQUFILENBQWEsYUFBYixFQUE0QixJQUE1QixFQUFrQyxJQUFsQyxDQURBLENBQUE7QUFBQSxJQUVBLEVBQUUsQ0FBQyxTQUFILEdBQWUsYUFGZixDQUFBO0FBR0EsV0FBTyxFQUFQLENBSlE7RUFBQSxDQWJWLENBQUE7O0FBQUEsRUFtQkEsS0FBQyxDQUFBLE9BQUQsR0FBVSxTQUFBLEdBQUE7QUFDUixRQUFBLEVBQUE7QUFBQSxJQUFBLEVBQUEsR0FBSyxRQUFRLENBQUMsV0FBVCxDQUFxQixZQUFyQixDQUFMLENBQUE7QUFBQSxJQUNBLEVBQUUsQ0FBQyxTQUFILENBQWEsYUFBYixFQUE0QixJQUE1QixFQUFrQyxJQUFsQyxDQURBLENBQUE7QUFBQSxJQUVBLEVBQUUsQ0FBQyxTQUFILEdBQWUsYUFGZixDQUFBO0FBR0EsV0FBTyxFQUFQLENBSlE7RUFBQSxDQW5CVixDQUFBOztBQUFBLGtCQXlCQSxPQUFBLEdBQVMsU0FBQSxHQUFBO0FBQ1AsSUFBQSxRQUFRLENBQUMsZ0JBQVQsQ0FBMEIsYUFBMUIsRUFBeUMsSUFBQyxDQUFBLE1BQTFDLENBQUEsQ0FBQTtXQUNBLFFBQVEsQ0FBQyxnQkFBVCxDQUEwQixhQUExQixFQUF5QyxJQUFDLENBQUEsTUFBMUMsRUFGTztFQUFBLENBekJULENBQUE7O0FBQUEsa0JBNkJBLE1BQUEsR0FBUSxTQUFBLEdBQUE7V0FDTixJQUFDLENBQUEsU0FBRCxHQUFhLEtBRFA7RUFBQSxDQTdCUixDQUFBOztBQUFBLGtCQWdDQSxNQUFBLEdBQVEsU0FBQSxHQUFBO1dBQ04sSUFBQyxDQUFBLFNBQUQsR0FBYSxNQURQO0VBQUEsQ0FoQ1IsQ0FBQTs7QUFBQSxrQkFtQ0EsTUFBQSxHQUFRLFNBQUMsS0FBRCxHQUFBO0FBQ04sSUFBQSxJQUFHLElBQUMsQ0FBQSxTQUFKO0FBQ0UsTUFBQSxJQUFDLENBQUEsSUFBRCxJQUFTLEtBQVQsQ0FERjtLQUFBO0FBT0EsSUFBQSxJQUFHLElBQUMsQ0FBQSx1QkFBRCxLQUE0QixJQUE1QixJQUFxQyxDQUFDLElBQUMsQ0FBQSx1QkFBRCxHQUEyQixJQUFDLENBQUEsSUFBN0IsQ0FBQSxHQUFxQyxDQUFBLEdBQUUsRUFBRixHQUFLLElBQS9FLElBQXdGLElBQUMsQ0FBQSxTQUFTLENBQUMsS0FBWCxLQUFvQixTQUFTLENBQUMsSUFBdEgsSUFBK0gsSUFBQyxDQUFBLFNBQW5JO0FBQ0UsTUFBQSxPQUFPLENBQUMsR0FBUixDQUFZLElBQUMsQ0FBQSxJQUFJLENBQUMsS0FBbEIsQ0FBQSxDQUFBO0FBQUEsTUFDQSxJQUFDLENBQUEsU0FBUyxDQUFDLFFBQVgsQ0FBb0IsU0FBUyxDQUFDLFFBQTlCLENBREEsQ0FBQTtBQUFBLE1BRUEsSUFBQyxDQUFBLFNBQVMsQ0FBQyxRQUFYLEdBQXVCLElBQUMsQ0FBQSx1QkFBRCxHQUEyQixJQUFDLENBQUEsSUFGbkQsQ0FERjtLQVBBO0FBWUEsSUFBQSxJQUFHLElBQUMsQ0FBQSxTQUFTLENBQUMsS0FBWCxLQUFvQixTQUFTLENBQUMsT0FBakM7QUFDRSxNQUFBLElBQUMsQ0FBQSxTQUFTLENBQUMsSUFBWCxHQUFtQixJQUFDLENBQUEsdUJBQUQsR0FBMkIsSUFBQyxDQUFBLElBQS9DLENBREY7S0FaQTtXQWVBLElBQUMsQ0FBQSxTQUFTLENBQUMsTUFBWCxDQUFrQixLQUFsQixFQWhCTTtFQUFBLENBbkNSLENBQUE7O2VBQUE7O0lBRkYsQ0FBQSIsImZpbGUiOiJjbGFzc2VzL3RyYWNrLmpzIiwic291cmNlUm9vdCI6Ii9zb3VyY2UvIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgU1BBQ0UuVHJhY2tcblxuICBkYXRhOiAgICAgIG51bGxcbiAgc3BhY2VzaGlwOiBudWxsXG4gIHNvdW5kOiAgICAgbnVsbFxuXG4gIHRpbWU6ICAgICAgbnVsbFxuXG4gIGR1cmF0aW9uQmVmb3JlTGF1bmNoaW5nOiBudWxsXG5cbiAgY29uc3RydWN0b3I6IChkYXRhLCBzcGFjZXNoaXApLT5cbiAgICBAZGF0YSAgICAgID0gZGF0YVxuICAgIEBzcGFjZXNoaXAgPSBzcGFjZXNoaXBcbiAgICBAX2V2ZW50cygpXG5cbiAgQE9OX1BMQVk6IC0+XG4gICAgZXYgPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnSFRNTEV2ZW50cycpXG4gICAgZXYuaW5pdEV2ZW50KCdzb3VuZG9ucGxheScsIHRydWUsIHRydWUpXG4gICAgZXYuZXZlbnROYW1lID0gJ3NvdW5kb25wbGF5J1xuICAgIHJldHVybiBldlxuXG4gIEBPTl9TVE9QOiAtPlxuICAgIGV2ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0hUTUxFdmVudHMnKVxuICAgIGV2LmluaXRFdmVudCgnc291bmRvbnN0b3AnLCB0cnVlLCB0cnVlKVxuICAgIGV2LmV2ZW50TmFtZSA9ICdzb3VuZG9uc3RvcCdcbiAgICByZXR1cm4gZXZcblxuICBfZXZlbnRzOiAtPlxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3NvdW5kb25wbGF5JywgQG9ucGxheSlcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdzb3VuZG9uc3RvcCcsIEBvbnN0b3ApXG5cbiAgb25wbGF5OiA9PlxuICAgIEBpc1BsYXlpbmcgPSB0cnVlXG5cbiAgb25zdG9wOiA9PlxuICAgIEBpc1BsYXlpbmcgPSBmYWxzZVxuXG4gIHVwZGF0ZTogKGRlbHRhKS0+XG4gICAgaWYgQGlzUGxheWluZ1xuICAgICAgQHRpbWUgKz0gZGVsdGFcblxuXG4gICAgIyBwZXJjZW50YWdlID0gQHRpbWUgLyBAZHVyYXRpb25CZWZvcmVMYXVuY2hpbmdcbiAgICAjIGNvbnNvbGUubG9nIHBlcmNlbnRhZ2VcblxuICAgIGlmIEBkdXJhdGlvbkJlZm9yZUxhdW5jaGluZyAhPSBudWxsIGFuZCAoQGR1cmF0aW9uQmVmb3JlTGF1bmNoaW5nIC0gQHRpbWUpIDwgNSo2MCoxMDAwIGFuZCBAc3BhY2VzaGlwLnN0YXRlID09IFNQQUNFU0hJUC5JRExFIGFuZCBAaXNQbGF5aW5nXG4gICAgICBjb25zb2xlLmxvZyBAZGF0YS50aXRsZVxuICAgICAgQHNwYWNlc2hpcC5zZXRTdGF0ZShTUEFDRVNISVAuTEFVTkNIRUQpXG4gICAgICBAc3BhY2VzaGlwLmR1cmF0aW9uID0gKEBkdXJhdGlvbkJlZm9yZUxhdW5jaGluZyAtIEB0aW1lKVxuXG4gICAgaWYgQHNwYWNlc2hpcC5zdGF0ZSA9PSBTUEFDRVNISVAuSU5fTE9PUFxuICAgICAgQHNwYWNlc2hpcC50aW1lID0gKEBkdXJhdGlvbkJlZm9yZUxhdW5jaGluZyAtIEB0aW1lKVxuXG4gICAgQHNwYWNlc2hpcC51cGRhdGUoZGVsdGEpXG5cbiAgICAjIEBzYyA9IG5ldyBTUEFDRS5Tb3VuZENsb3VkKFNQQUNFLlNPVU5EQ0xPVUQuaWQpXG5cbiAgIyBsYXVuY2g6IC0+XG4gICMgICBAc3BhY2VzaGlwLnNldFN0YXRlKFNQQUNFU0hJUC5MQVVOQ0hFRClcblxuICAjIHBsYXk6IC0+XG5cbiAgIyAgIEBzYy5zdHJlYW1Tb3VuZChAZGF0YSwgKHNvdW5kKT0+XG4gICMgICAgIEBzb3VuZCA9IHNvdW5kXG4gICMgICAsID0+XG4gICMgICAgIGNvbnNvbGUubG9nICd3aGlsZXBsYXlpbmcnXG4gICMgICAgICMgZGF0YXMgPSBBcnJheSgyNTYpXG4gICMgICAgICMgZm9yIGkgaW4gWzAuLjEyN11cbiAgIyAgICAgIyAgIGRhdGFzW2ldICAgICA9IE1hdGgubWF4KEBzb3VuZC53YXZlZm9ybURhdGEubGVmdFtpXSwgQHNvdW5kLndhdmVmb3JtRGF0YS5yaWdodFtpXSlcbiAgIyAgICAgIyAgIGRhdGFzWzI1NS1pXSA9IE1hdGgubWF4KEBzb3VuZC53YXZlZm9ybURhdGEubGVmdFtpXSwgQHNvdW5kLndhdmVmb3JtRGF0YS5yaWdodFtpXSlcblxuICAjICAgICAjIEBlcS5zZXROZXdWYWx1ZXMoZGF0YXMpXG4gICMgICApXG4iXX0=